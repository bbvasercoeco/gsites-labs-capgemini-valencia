<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="TablaPaginada"
  description="Tabla cargada desde docs con paginacion y parametrizada."
  author_affiliation="Capgemini">
<Require feature="idi"/>
<Require feature="locked-domain" />
</ModulePrefs>
  
<UserPref name="_table_query_url" display_name="Data source url" required="true"/>
<UserPref name="_filaDescartadas" default_value="0" display_name="Descartar primeras n filas:" required="true"/>
<UserPref name="_Col" default_value="4" display_name="Escoger primeras n columnas:" required="true"/>
<UserPref name="_NumElemPorPagina" default_value="8" display_name="Número de elementos por página:" required="true"/>
  
<Content type="html"><![CDATA[

<script src="http://www.google.com/jsapi" type="text/javascript"></script>

<div id="tablediv" style="overflow: auto;">
<img src="http://www.google.com/ig/images/spinner.gif"/>
</div>

<style type="text/css">
   
   .tablaGeneral{
      border-collapse:collapse;
	  width:100%;
   }

   .tablaGeneral td{
      padding-left: 5px;
   }

   .cabecera{
       background: blue;
       color: white;
       font-size:18px;
       font-family:Arial;
   }

   .fila{
       background: white;
       border-bottom:solid #E2E2E2;
       height: 50px;
   }

   .filaDestacada{
      background: #F3F3F3;
      border-bottom:solid #E2E2E2;
      height: 50px;
   }

   .filaUltima{
      background: white;
      height: 50px;
      valign:center;
      text-align: right;
   }

   

</style>

<script>

var table=function(){
	function sorter(n){
		this.n=n; this.t; this.b; this.r; this.d; this.p; this.w; this.a=[]; this.l=0
	}
	sorter.prototype.init=function(t,f){
		this.t=document.getElementById(t);
		this.b=this.t.getElementsByTagName('tbody')[0];
		this.r=this.b.rows; var l=this.r.length;
		for(var i=0;i<l;i++){
			if(i==0){
				var c=this.r[i].cells; this.w=c.length;
				for(var x=0;x<this.w;x++){
					if(c[x].className!='nosort'){
						c[x].className='head';
						c[x].onclick=new Function(this.n+'.work(this.cellIndex)')
					}
				}
			}else{
				this.a[i-1]={}; this.l++;
			}
		}
		if(f!=null){
			var a=new Function(this.n+'.work('+f+')'); a()
		}
	}
	sorter.prototype.work=function(y){
		this.b=this.t.getElementsByTagName('tbody')[0]; this.r=this.b.rows;
		var x=this.r[0].cells[y],i;
		for(i=0;i<this.l;i++){
			this.a[i].o=i+1; var v=this.r[i+1].cells[y].firstChild;
			this.a[i].value=(v!=null)?v.nodeValue:''
		}
		for(i=0;i<this.w;i++){
			var c=this.r[0].cells[i];
			if(c.className!='nosort'){c.className='head'}
		}
		if(this.p==y){
			this.a.reverse(); x.className=(this.d)?'asc':'desc';
			this.d=(this.d)?false:true
		}else{
			this.p=y; this.a.sort(compare); x.className='asc'; this.d=false
		}
		var n=document.createElement('tbody');
		n.appendChild(this.r[0]);
		for(i=0;i<this.l;i++){
			var r=this.r[this.a[i].o-1].cloneNode(true);
			n.appendChild(r); r.className=(i%2==0)?'even':'odd'
		}
		this.t.replaceChild(n,this.b)
	}
	function compare(f,c){
		f=f.value,c=c.value;
		var i=parseFloat(f.replace(/(\$|\,)/g,'')),n=parseFloat(c.replace(/(\$|\,)/g,''));
		if(!isNaN(i)&&!isNaN(n)){f=i,c=n}
		return (f>c?1:(f<c?-1:0))
	}
	return{sorter:sorter}
}();

var pagActual = 1;

var gadgetHelper = null;
var _filaDescartadas = 0;
var _Col = 3;
var numElePag = 8;
var totPag = 1;
var data;
_IG_RegisterOnloadHandler(loadVisualizationAPI);

function loadVisualizationAPI() {
  google.load("visualization", "1");
  google.setOnLoadCallback(sendQuery);
}

function sendQuery() {
  var prefs = new _IG_Prefs(); // User preferences
  _filaDescartadas = prefs.getInt("_filaDescartadas");
  _Col = prefs.getInt("_Col");
  numElePag = prefs.getInt("_NumElemPorPagina");
  gadgetHelper = new google.visualization.GadgetHelper();
  var query = gadgetHelper.createQueryFromPrefs(prefs);
  query.send(handleQueryResponse);
}

function siguientes(){
  pagActual++;
  dibujaTabla();
}

function anteriores(){
  pagActual--;
  dibujaTabla();
}

function ordenar(columna){
	alert('Columna: '+columna);
	
	//pagActual--;
	dibujaTabla();
}

function dibujaTabla(){
   var html = [];
   
   html.push('<table class="tablaGeneral" id="sorter">');
  html.push('<tr class="cabecera">');
  for (var col = 0; col < Math.min(data.getNumberOfColumns(),_Col); col++) {
    var formattedValue = data.getFormattedValue(_filaDescartadas, col);
    html.push('<th><span onclick="ordenar('+col+')">');
       formattedValue = escapeHtml(formattedValue+'&nbsp;&nbsp;&nbsp;&nbsp;');
       html.push(formattedValue);
	   html.push('<img src="http://gsites-labs-capgemini-valencia.googlecode.com/svn/trunk/JVBtemp/img/t.png"/>');
    html.push('</span></th>');
  }
  html.push('</tr>');
  var inicio = ((_filaDescartadas + 1) + ((pagActual - 1) * numElePag));
  var fin = Math.min(inicio + numElePag,data.getNumberOfRows());
  for (var row = inicio; row < fin; row++) {
    if((row % 2) == 0)
       html.push('<tr class="filaDestacada">');
    else
       html.push('<tr class="fila">');
      
    for (var col = 0; col < Math.min(data.getNumberOfColumns(),_Col); col++) {

      var formattedValue = data.getFormattedValue(row, col);
      formattedValue = escapeHtml(formattedValue);

        //html.push('<span style="color:red; font-size:24pt; font-weight:bold;">');
        html.push('<td>');
           html.push(formattedValue);
        html.push('</td>');
    }
    html.push('</tr>');
  }
  html.push('<tr class="filaUltima"><td colspan="'+_Col +'">');
  if(data.getNumberOfRows() > numElePag){
     if(pagActual > 1){
	    html.push('<a href="#" onclick="anteriores();"><< Anteriores</a>&nbsp;|&nbsp;');
     }
     html.push('P&aacute;gina '+pagActual+' de '+totPag);
     if(pagActual < totPag){
        html.push(' | <a href="#" onclick="siguientes();">Siguientes >></a>');
     }
  }

  html.push('</td></tr></table>');
  var tableDiv = _gel('tablediv');
  tableDiv.innerHTML = html.join('');
  tableDiv.style.width = document.body.clientWidth + 'px';
  tableDiv.style.height = document.body.clientHeight + 'px';
}

function handleQueryResponse(response) {
  if (!gadgetHelper.validateResponse(response)) { return; }
  data = response.getDataTable();
  
  totPag = Math.ceil(data.getNumberOfRows() / numElePag);
  dibujaTabla();
}

function escapeHtml(text) {
  if (text == null) {
    return '';
  }
  return _hesc(text);
}

var sorter=new table.sorter("sorter");
sorter.init("sorter",1);

</script>
]]>
</Content>
</Module>